[{"/home/bianc/projects/reactpractica/chart-generator/src/App.js":"1","/home/bianc/projects/reactpractica/chart-generator/src/utils/utils.js":"2","/home/bianc/projects/reactpractica/chart-generator/src/components/DetailsBox.js":"3","/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/LineChart.js":"4","/home/bianc/projects/reactpractica/chart-generator/src/utils/default.js":"5","/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/BarsChart.js":"6","/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/RectangleChart.js":"7","/home/bianc/projects/reactpractica/chart-generator/src/index.js":"8","/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/RaceChart.js":"9","/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/PieChart.js":"10","/home/bianc/projects/reactpractica/chart-generator/src/components/PeriodsSelector.js":"11"},{"size":1636,"mtime":1607628752821,"results":"12","hashOfConfig":"13"},{"size":1135,"mtime":1607629978292,"results":"14","hashOfConfig":"13"},{"size":1109,"mtime":1607526301441,"results":"15","hashOfConfig":"13"},{"size":5849,"mtime":1607626618918,"results":"16","hashOfConfig":"13"},{"size":773,"mtime":1607630313644,"results":"17","hashOfConfig":"13"},{"size":3027,"mtime":1607690895351,"results":"18","hashOfConfig":"13"},{"size":3159,"mtime":1607690411735,"results":"19","hashOfConfig":"13"},{"size":219,"mtime":1607689893356,"results":"20","hashOfConfig":"13"},{"size":367,"mtime":1607626825000,"results":"21","hashOfConfig":"13"},{"size":220,"mtime":1607626793792,"results":"22","hashOfConfig":"13"},{"size":733,"mtime":1607690386007,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"1u5xy6h",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bianc/projects/reactpractica/chart-generator/src/App.js",["47"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getPeriodsTotal } from \"./utils/utils\";\nimport { fakeData, defaultConfig } from \"./utils/default\";\nimport RectangleChart from \"./components/Charts/RectangleChart\";\nimport BarsChart from \"./components/Charts/BarsChart\";\nimport LineChart from \"./components/Charts/LineChart\";\nimport RaceChart from \"./components/Charts/RaceChart\";\nimport PieChart from \"./components/Charts/PieChart\";\n\nconst types = {\n  bars: BarsChart,\n  line: LineChart,\n  race: RaceChart,\n  rectangle: RectangleChart,\n  pie: PieChart,\n};\n\nexport default function App({ data = fakeData, config = defaultConfig }) {\n  const [periodsTotal, setPeriodsTotal] = useState([]);\n  const [chartStyle, setChartStyle] = useState({\n    visibility: \"hidden\",\n    width: \"0\",\n  });\n\n  useEffect(() => {\n    setPeriodsTotal(getPeriodsTotal(data, config.periods));\n  }, []);\n\n  const Chart = types[config.type];\n\n  return (\n    <Wrapper>\n      <Button\n        onClick={() => setChartStyle({ visibility: \"visible\", width: \"100%\" })}\n      >\n        Generate chart!\n      </Button>\n      <ChartContainer>\n        <Chart\n          chartStyle={chartStyle}\n          config={config}\n          data={data}\n          periodsTotal={periodsTotal}\n        />\n      </ChartContainer>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst Button = styled.button`\n  cursor: pointer;\n`;\n\nconst ChartContainer = styled.div`\n  height: 500px;\n  width: 85%;\n`;\n","/home/bianc/projects/reactpractica/chart-generator/src/utils/utils.js",[],"/home/bianc/projects/reactpractica/chart-generator/src/components/DetailsBox.js",[],"/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/LineChart.js",[],"/home/bianc/projects/reactpractica/chart-generator/src/utils/default.js",[],"/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/BarsChart.js",[],"/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/RectangleChart.js",[],"/home/bianc/projects/reactpractica/chart-generator/src/index.js",[],"/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/RaceChart.js",["48","49"],"/home/bianc/projects/reactpractica/chart-generator/src/components/Charts/PieChart.js",["50","51","52"],"/home/bianc/projects/reactpractica/chart-generator/src/components/PeriodsSelector.js",[],{"ruleId":"53","severity":1,"message":"54","line":28,"column":6,"nodeType":"55","endLine":28,"endColumn":8,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":18},{"ruleId":"57","severity":1,"message":"62","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config.periods' and 'data'. Either include them or remove the dependency array. If 'setPeriodsTotal' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.","ArrayExpression",["63"],"no-unused-vars","'getPercentage' is defined but never used.","Identifier","unusedVar","'DetailsBox' is defined but never used.","'styled' is defined but never used.",{"desc":"64","fix":"65"},"Update the dependencies array to be: [config.periods, data]",{"range":"66","text":"67"},[921,923],"[config.periods, data]"]